blueprint:
  name: Philips Hue Dimmer Switch control
  description: 'Control lights with a Philips Hue Dimmer Switch. Set an action for each button. Note: You have to pick an action for each event. If you donâ€™t want to react to an event, choose a Delay of 0sec.'
  domain: automation
  input:
    remote:
      name: Dimmer Switch Action sensor
      description: Select your entity that will control this
        automation.
      selector:
        entity:
          domain: sensor
    action_on-press:
      name: on-press
      description: select action to run when you press I
      default: []
      selector:
        action: {}
    action_off-press:
      name: off-press
      description: select action to run when you press O
      default: []
      selector:
        action: {}
    action_up-press:
      name: up-press
      description: select action to run when you press UP
      default: []
      selector:
        action: {}
    action_down-press:
      name: down-press
      description: select action to run when you press DOWN
      default: []
      selector:
        action: {}
    action_on-hold:
      name: on-hold
      description: select action to run when you hold I
      default: []
      selector:
        action: {}
    action_off-hold:
      name: off-hold
      description: select action to run when you hold O
      default: []
      selector:
        action: {}
    action_up-hold:
      name: up-hold
      description: select action to run when you hold UP
      default: []
      selector:
        action: {}
    action_down-hold:
      name: down-hold
      description: select action to run when you hold DOWN
      default: []
      selector:
        action: {}
mode: restart
trigger:
- platform: state
  entity_id: !input 'remote'
action:
- variables:
    command: '{{ trigger.to_state.attributes.action }}'
- choose:
  - conditions:
    - '{{ command == ''on-press'' }}'
    sequence: !input 'action_on-press'
  - conditions:
    - '{{ command == ''off-press'' }}'
    sequence: !input 'action_off-press'
  - conditions:
    - '{{ command == ''up-press'' }}'
    sequence: !input 'action_up-press'
  - conditions:
    - '{{ command == ''down-press'' }}'
    sequence: !input 'action_down-press'
  - conditions:
    - '{{ command == ''on-hold'' }}'
    sequence: !input 'action_on-hold'
  - conditions:
    - '{{ command == ''off-hold'' }}'
    sequence: !input 'action_off-hold'
  - conditions:
    - '{{ command == ''up-hold'' }}'
    sequence: !input 'action_up-hold'
  - conditions:
    - '{{ command == ''down-hold'' }}'
    sequence: !input 'action_down-hold'
  default: []
